-- Create Database
CREATE DATABASE IF NOT EXISTS professional_network;
USE professional_network;

-- Users Table
CREATE TABLE USERS (
    USER_ID INT AUTO_INCREMENT PRIMARY KEY,
    EMAIL VARCHAR(255) UNIQUE NOT NULL,
    PASSWORD_HASH VARCHAR(255) NOT NULL,
    F_NAME VARCHAR(100) NOT NULL,
    L_NAME VARCHAR(100) NOT NULL,
    DOB DATE,
    INDUSTRY VARCHAR(100),
    PROFILE_PIC_URL VARCHAR(500),
    COUNTRY VARCHAR(100),
    CITY VARCHAR(100),
    BIO TEXT,
    HEADLINE VARCHAR(255),
    STATUS ENUM('active', 'inactive', 'suspended') DEFAULT 'active',
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_email (EMAIL),
    INDEX idx_status (STATUS)
);

-- Connections Table
CREATE TABLE CONNECTIONS (
    CONNECTION_ID INT AUTO_INCREMENT PRIMARY KEY,
    REQUEST_ID INT NOT NULL,
    RECEIVER_ID INT NOT NULL,
    STATUS ENUM('pending', 'accepted', 'rejected') DEFAULT 'pending',
    REQUESTED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    ACCEPTED_AT TIMESTAMP NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (REQUEST_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
    FOREIGN KEY (RECEIVER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
    INDEX idx_status (STATUS),
    INDEX idx_receiver (RECEIVER_ID)
);

-- Experience Table
CREATE TABLE EXPERIENCE (
    EXPERIENCE_ID INT AUTO_INCREMENT PRIMARY KEY,
    USER_ID INT NOT NULL,
    COMPANY_NAME VARCHAR(200) NOT NULL,
    JOB_TITLE VARCHAR(150) NOT NULL,
    EMPLOYMENT_TYPE ENUM('Full-time', 'Part-time', 'Contract', 'Internship', 'Freelance'),
    LOCATION VARCHAR(200),
    JOB_DESCRIPTION TEXT,
    START_DATE DATE NOT NULL,
    END_DATE DATE,
    IS_CURRENT BOOLEAN DEFAULT FALSE,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
    INDEX idx_user (USER_ID),
    INDEX idx_current (IS_CURRENT)
);

-- Education Table
CREATE TABLE EDUCATION (
    EDUCATION_ID INT AUTO_INCREMENT PRIMARY KEY,
    USER_ID INT NOT NULL,
    INSTITUTION_NAME VARCHAR(200) NOT NULL,
    FIELD_OF_STUDY VARCHAR(150),
    DEGREE VARCHAR(100),
    DESCRIPTION TEXT,
    START_DATE DATE NOT NULL,
    END_DATE DATE,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
    INDEX idx_user (USER_ID)
);

-- Skills Table
CREATE TABLE SKILLS (
    SKILL_ID INT AUTO_INCREMENT PRIMARY KEY,
    USER_ID INT NOT NULL,
    SKILL VARCHAR(100) NOT NULL,
    PROFICIENCY_LVL ENUM('Beginner', 'Intermediate', 'Advanced', 'Expert'),
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
    INDEX idx_user (USER_ID),
    INDEX idx_skill (SKILL)
);

-- Posts Table
CREATE TABLE POSTS (
    POST_ID INT AUTO_INCREMENT PRIMARY KEY,
    USER_ID INT NOT NULL,
    TITLE VARCHAR(255),
    CONTENT TEXT NOT NULL,
    MEDIA_URL VARCHAR(500),
    POST_TYPE ENUM('text', 'image', 'video', 'article') DEFAULT 'text',
    LIKES_COUNT INT DEFAULT 0,
    COMMENTS_COUNT INT DEFAULT 0,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
    INDEX idx_user (USER_ID),
    INDEX idx_created (CREATED_AT)
);

-- Post Likes Table
CREATE TABLE POST_LIKES (
    LIKE_ID INT AUTO_INCREMENT PRIMARY KEY,
    POST_ID INT NOT NULL,
    USER_ID INT NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (POST_ID) REFERENCES POSTS(POST_ID) ON DELETE CASCADE,
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
    UNIQUE KEY unique_post_like (POST_ID, USER_ID),
    INDEX idx_post (POST_ID),
    INDEX idx_user (USER_ID)
);

-- Comments Table
CREATE TABLE COMMENTS (
    COMMENT_ID INT AUTO_INCREMENT PRIMARY KEY,
    POST_ID INT NOT NULL,
    USER_ID INT NOT NULL,
    CONTENT TEXT NOT NULL,
    LIKES_COUNT INT DEFAULT 0,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (POST_ID) REFERENCES POSTS(POST_ID) ON DELETE CASCADE,
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
    INDEX idx_post (POST_ID),
    INDEX idx_user (USER_ID)
);

-- Comment Likes Table
CREATE TABLE COMMENT_LIKES (
    LIKE_ID INT AUTO_INCREMENT PRIMARY KEY,
    COMMENT_ID INT NOT NULL,
    USER_ID INT NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (COMMENT_ID) REFERENCES COMMENTS(COMMENT_ID) ON DELETE CASCADE,
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
    UNIQUE KEY unique_comment_like (COMMENT_ID, USER_ID),
    INDEX idx_comment (COMMENT_ID),
    INDEX idx_user (USER_ID)
);

-- NEW: Projects Table
CREATE TABLE PROJECTS (
    PROJECT_ID INT AUTO_INCREMENT PRIMARY KEY,
    USER_ID INT NOT NULL,
    PROJECT_TITLE VARCHAR(200) NOT NULL,
    DESCRIPTION TEXT,
    TECHNOLOGIES_USED VARCHAR(500),
    PROJECT_URL VARCHAR(500),
    GITHUB_URL VARCHAR(500),
    START_DATE DATE NOT NULL,
    END_DATE DATE,
    IS_ONGOING BOOLEAN DEFAULT FALSE,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
    INDEX idx_user (USER_ID),
    INDEX idx_ongoing (IS_ONGOING)
);

-- NEW: Resume Templates Table
CREATE TABLE RESUME_TEMPLATES (
    TEMPLATE_ID INT AUTO_INCREMENT PRIMARY KEY,
    TEMPLATE_NAME VARCHAR(100) NOT NULL,
    TEMPLATE_TYPE ENUM('Classic', 'Modern', 'Minimal', 'Creative') DEFAULT 'Classic',
    HTML_STRUCTURE TEXT,
    CSS_STYLING TEXT,
    PREVIEW_IMAGE_URL VARCHAR(500),
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_type (TEMPLATE_TYPE)
);

-- NEW: User Resume Settings Table
CREATE TABLE USER_RESUME_SETTINGS (
    SETTINGS_ID INT AUTO_INCREMENT PRIMARY KEY,
    USER_ID INT NOT NULL,
    TEMPLATE_ID INT NOT NULL,
    INCLUDE_PROFILE_PIC BOOLEAN DEFAULT TRUE,
    INCLUDE_BIO BOOLEAN DEFAULT TRUE,
    INCLUDE_PROJECTS BOOLEAN DEFAULT TRUE,
    SECTIONS_ORDER JSON,
    COLOR_SCHEME VARCHAR(50) DEFAULT '#000000',
    FONT_STYLE VARCHAR(50) DEFAULT 'Arial',
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
    FOREIGN KEY (TEMPLATE_ID) REFERENCES RESUME_TEMPLATES(TEMPLATE_ID),
    UNIQUE KEY unique_user_settings (USER_ID),
    INDEX idx_user (USER_ID)
);

-- NEW: Project Collaborators Table (Optional - for team projects)
CREATE TABLE PROJECT_COLLABORATORS (
    COLLABORATOR_ID INT AUTO_INCREMENT PRIMARY KEY,
    PROJECT_ID INT NOT NULL,
    USER_ID INT NOT NULL,
    ROLE VARCHAR(100),
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (PROJECT_ID) REFERENCES PROJECTS(PROJECT_ID) ON DELETE CASCADE,
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
    UNIQUE KEY unique_project_collaborator (PROJECT_ID, USER_ID),
    INDEX idx_project (PROJECT_ID),
    INDEX idx_user (USER_ID)
);
